name: .NET 5 project deploy

on:
  workflow_dispatch: { }
  workflow_run:
    workflows: [ ".NET 5 project build" ]
    types:
      - completed

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Copy Docker Compose
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose.yml"
          target: "/etc/infra/${{ vars.PROJECT_NAME }}/"

      - name: Copy Nginx Config
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "${{ vars.PROJECT_NAME }}.conf"
          target: "/etc/infra/nginx.conf.d/locations"
          
      - name: Create .env file
        uses: ozaytsev86/create-env-file@v1
        with:
          ENV_SVC_CONNECTION_STRING: ${{ secrets.SVC_CONNECTION_STRING }}
          ENV_SVC_USER_NAME: ${{ secrets.SVC_USER_NAME }}
          ENV_SVC_PASSWORD: ${{ secrets.SVC_PASSWORD }}
          ENV_SVC_VECTOR: ${{ secrets.SVC_VECTOR }}
        
      - name: Copy .env file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: ".env"
          target: "/etc/infra/${{ vars.PROJECT_NAME }}/"

      - name: Run Docker Compose
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.CR_PAT }}
            cd /etc/infra/${{ vars.PROJECT_NAME }} 
            docker-compose pull && docker-compose up -d
            docker exec nginx nginx -s reload

